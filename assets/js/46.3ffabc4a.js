(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{249:function(t,e,s){"use strict";s.r(e);var n=s(0),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"接口幂等性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口幂等性"}},[t._v("#")]),t._v(" 接口幂等性")]),t._v(" "),s("p",[t._v("  实现接口幂等性通常有两种方案。")]),t._v(" "),s("p",[t._v("  一是接口只允许被调用一次，比如数据库的唯一约束，基于Redis的分布式锁机制。")]),t._v(" "),s("p",[t._v("  二是对数据的影响只会触发一次，比如状态机、乐观锁。")])])}),[],!1,null,null,null);e.default=r.exports}}]);