(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{307:function(t,e,s){"use strict";s.r(e);var a=s(14),v=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),s("p",[s("strong",[t._v("  官方地址下载")]),t._v("：https://git-scm.com/download/win")]),t._v(" "),s("h3",{attrs:{id:"初始化配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化配置"}},[t._v("#")]),t._v(" 初始化配置")]),t._v(" "),s("ul",[s("li",[t._v("1、右键电脑空白处，点击 "),s("code",[t._v("Git Bash Here")])]),t._v(" "),s("li",[t._v("2、设置全局变量用户名称 "),s("code",[t._v('git config --global user.name "weihao"')])]),t._v(" "),s("li",[t._v("3、设置全局变量用户邮箱 "),s("code",[t._v('git config --global user.email "weihao_950611@163.com"')])])]),t._v(" "),s("p",[t._v("  如果以http请求的方式拉取代码或者提交代码，每次都需要输入账号和密码。通常情况下会设置"),s("strong",[t._v("SSH Key")]),t._v("的方式来简化操作。")]),t._v(" "),s("ul",[s("li",[t._v("1、生成SSH Key "),s("code",[t._v('ssh-keygen -t rsa -C "weihao_950611@163.com"')])]),t._v(" "),s("li",[t._v("2、进入"),s("code",[t._v("C:\\Users\\firstlaptop\\.ssh")]),t._v("，打开 "),s("code",[t._v("id_rsa.pub")])]),t._v(" "),s("li",[t._v("3、复制内容到gitlab中，右上角头像，选settings，左侧SSH Keys，粘贴进入，title自动填充你的邮箱，然后点击Add Key")])]),t._v(" "),s("h3",{attrs:{id:"提交代码的正确步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交代码的正确步骤"}},[t._v("#")]),t._v(" 提交代码的正确步骤")]),t._v(" "),s("ul",[s("li",[t._v("1、"),s("code",[t._v("git status")]),t._v("检查本地代码的状态")]),t._v(" "),s("li",[t._v("2、"),s("code",[t._v("git add .")]),t._v(" 将本地代码提交到暂存区")]),t._v(" "),s("li",[t._v("3、"),s("code",[t._v("git status")]),t._v("再次检查本地代码的状态")]),t._v(" "),s("li",[t._v("4、"),s("code",[t._v('git commit -m "备注"')]),t._v("将暂存区的代码提交到本地仓库")]),t._v(" "),s("li",[t._v("5、"),s("code",[t._v("git pull")]),t._v("在远程仓库拉取代码")]),t._v(" "),s("li",[t._v("6、"),s("code",[t._v("git push origin master")]),t._v("如果没有冲突直接提交代码到远程仓库，有冲突的话，解决冲突，然后提交到本地仓库，再次pull，再次push")])]),t._v(" "),s("h3",{attrs:{id:"拉取代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拉取代码"}},[t._v("#")]),t._v(" 拉取代码")]),t._v(" "),s("p",[s("strong",[t._v("1、第一次拉取代码")])]),t._v(" "),s("p",[t._v("  第一次拉取代码，其实是克隆代码到本地，并在当前文件夹下创建一个本地仓库，并和远程仓库关联。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git clone git@github.com:bitaim/photo.git \n")])])]),s("p",[s("strong",[t._v("2、第二次拉取代码")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git pull\n")])])]),s("h3",{attrs:{id:"本地仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地仓库"}},[t._v("#")]),t._v(" 本地仓库")]),t._v(" "),s("p",[s("strong",[t._v("1、创建一个本地仓库")])]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对当前目录创建一个本地仓库")]),t._v("\ngit init\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个文件夹作为本地仓库")]),t._v("\ngit init <folder-name>\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 克隆一个远程仓库则自动创建本地仓库")]),t._v("\ngit clone <url>\n")])])]),s("p",[s("strong",[t._v("2、关联一个远程仓库")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("git remote add origin git@github.com:bitaim/photo.git\n")])])]),s("h3",{attrs:{id:"推送代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#推送代码"}},[t._v("#")]),t._v(" 推送代码")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一次提交代码")]),t._v("\ngit push -u origin master\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 之后提交代码")]),t._v("\ngit push\n")])])]),s("h3",{attrs:{id:"暂存区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#暂存区"}},[t._v("#")]),t._v(" 暂存区")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将当前目录下的文件添加到暂存区")]),t._v("\ngit add .\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定文件添加到暂存区")]),t._v("\ngit add <file1> <file2>\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 指定文件夹到暂存区")]),t._v("\ngit add <dir>\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移除暂存区的文件")]),t._v("\ngit rm --cache <file>\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 暂存暂存区和本地的文件")]),t._v("\ngit rm <file>\n")])])]),s("h3",{attrs:{id:"撤销操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销操作"}},[t._v("#")]),t._v(" 撤销操作")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个命令改变的是工作区")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 还原文件到最近的一次add或者commit操作。")]),t._v("\ngit checkout -- file \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个命令改变的是暂存区")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移除add命令添加到暂存区的文件")]),t._v("\ngit reset HEAD -- file\n")])])]),s("p",[s("strong",[t._v("5、回退一次版本")])]),t._v(" "),s("p",[s("code",[t._v("git reset HEAD")]),t._v(" 将提交到暂存区的代码回退")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("git log")]),t._v(" 查看所有提交记录，↑ ↓ 滚动，按 q 退出。"),s("code",[t._v("git log --pretty=oneline")]),t._v("，优雅的方式查看历史版本")]),t._v(" "),s("li",[s("code",[t._v("git reset --hard <commit id>")]),t._v(" 根据版本号回退")]),t._v(" "),s("li",[s("code",[t._v("git reset --hard head^")]),t._v(" 回退上一次版本，"),s("code",[t._v("git reset --hard head^^")]),t._v(" 回退上上次版本，"),s("code",[t._v("git reset --hard head~5")]),t._v(" 回退5次版本")]),t._v(" "),s("li",[s("code",[t._v("git reflog")]),t._v("查看更多记录，包含提交、回退记录")])]),t._v(" "),s("p",[s("strong",[t._v("6、分支命令")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("git branch")]),t._v(" 查看所有分支")]),t._v(" "),s("li",[s("code",[t._v("git branch demo-2")]),t._v(" 创建分支")]),t._v(" "),s("li",[s("code",[t._v("git branch -d demo-2")]),t._v(" 删除本地分支")]),t._v(" "),s("li",[s("code",[t._v("git checkout demo-2")]),t._v(" 切换分支")])]),t._v(" "),s("p",[s("strong",[t._v("7、标签命令")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("git tag --list")]),t._v(" 查看所有标签")]),t._v(" "),s("li",[s("code",[t._v("git tag t1.0.0")]),t._v(" 当前分支创建标签")]),t._v(" "),s("li",[s("code",[t._v("git tag -d t1.0.0")]),t._v(" 删除本地分支")]),t._v(" "),s("li",[s("code",[t._v("git push origin t1.0.0")]),t._v(" 推送标签")]),t._v(" "),s("li",[s("code",[t._v("git push origin :t1.0.0")]),t._v(" 删除远程仓库标签")])]),t._v(" "),s("p",[s("strong",[t._v("8、合并命令")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("git merge demo-1")]),t._v(" 将demo-1的代码合并到当前分支")])]),t._v(" "),s("p",[s("strong",[t._v("9、撤销命令")])]),t._v(" "),s("ol",[s("li",[t._v("修改了UserController，发现改错了，需要撤销对其的修改 "),s("code",[t._v("git checkout UserController.java")])])])])}),[],!1,null,null,null);e.default=v.exports}}]);