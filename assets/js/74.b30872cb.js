(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{273:function(t,n,e){"use strict";e.r(n);var r=e(0),s=Object(r.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),e("h2",{attrs:{id:"文件服务器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件服务器"}},[t._v("#")]),t._v(" 文件服务器")]),t._v(" "),e("p",[t._v("  记一次在工作中使用Nginx作为文件服务器的使用方法。"),e("strong",[t._v("注意")]),t._v("目录下不要有中文，否则会报错。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("An error occurred.\nSorry, the page you are looking for is currently unavailable.\nPlease try again later.\n\nIf you are the system administrator of this resource \nthen you should check the error log for details.\n\nFaithfully yours, nginx.\n")])])]),e("p",[t._v("  在 "),e("code",[t._v("/logs/error.log")]),t._v("中发现以下错误，"),e("code",[t._v("1113: No mapping for the Unicode character exists in the target multi-byte code page")])]),t._v(" "),e("p",[e("strong",[t._v("配置如下")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  \'$remote_addr - $remote_user [$time_local] "$request" \'\n    #                  \'$status $body_bytes_sent "$http_referer" \'\n    #                  \'"$http_user_agent" "$http_x_forwarded_for"\';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    server {\n        listen       3030;\n        server_name  localhost;\n        \n        #access_log  logs/host.access.log  main;\n\n        # Begin\n        location / {\n\t\t\tautoindex on;\n\t\t\tautoindex_localtime on;\n\t\t\tautoindex_exact_size off;\n            root Y:/;\n        }\n        # End\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }    \n    }\n}\n')])])]),e("h2",{attrs:{id:"https配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#https配置"}},[t._v("#")]),t._v(" HTTPS配置")]),t._v(" "),e("p",[e("strong",[t._v("1、购买SSL证书")])]),t._v(" "),e("ul",[e("li",[t._v("1、进入阿里云官网，进入SSL证书管理控制台")]),t._v(" "),e("li",[t._v("2、阿里云提供1年免费的SSL证书，首先我们点击"),e("code",[t._v("购买证书")]),t._v("按钮（到期后可继续购买）")]),t._v(" "),e("li",[t._v("3、购买后进行域名和ssl配置")]),t._v(" "),e("li",[t._v("4、在下方的证书列表 右侧点击下载 选择Nginx，下载解压并上传到服务器")]),t._v(" "),e("li",[t._v("5、在阿里云安全组开放443端口")])]),t._v(" "),e("p",[e("strong",[t._v("2、修改Nginx配置")])]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("    server {\n        listen       80;\n\n\t\t# begin \n        server_name  www.<主域名>.cn;\n\t\trewrite ^/(.*) https://www.<主域名>.cn/$1 permanent;\n\t\t# end\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n\t\n\t# begin\n\tserver {\n\t\t listen 443;\n\t\t server_name www.<主域名>.cn;\n\t\t ssl on;\n\t\t root html;\n\t\t index index.html index.htm;\n\t\t # 上传到服务器的密钥 Begin\n\t\t ssl_certificate   /usr/local/https/www.<主域名>.cn.pem;\n\t\t ssl_certificate_key  /usr/local/https/www.<主域名>.cn.key;\n\t\t # 上传到服务器的密钥 End\n\t\t ssl_session_timeout 5m;\n\t\t ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n\t\t ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n\t\t ssl_prefer_server_ciphers on;\n\t\t location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\t}\n\t# end\n")])])]),e("h2",{attrs:{id:"反向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反向代理"}},[t._v("#")]),t._v(" 反向代理")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('http {\n\n\n    # 开启Nginx的长连接\n    keepalive_timeout 65;\n    keepalive_requests 100;\n\n    # tomcat 集群\n    upstream tomcat_servers {\n        # 失败三次，则触发熔断，10秒内不再分发请求给该服务器\n        server 192.168.29.101:8080 weight=3 max_fails=3 fail_timeout=10s;\n        server 192.168.29.102:8080 weight=2 max_fails=3 fail_timeout=10s;\n        # 每个Worker可保持的长连接的最大空闲数\n        # Tomcat的该值可以设置大一些\n        keepalive 30;\n    }\n    server {\n        port 80;\n\n        proxy_read_timeout 3s; # 超时时间为3秒，默认是60秒。\n        proxy_next_upstream_tries 2; # 重试次数\n        proxy_next_upstream_timeout 6; # 重试的最长时间\n        proxy_next_upstream error timeout; # 故障转移 http_503 http_500 http_404;\n        \n\n        location / {\n            # 建立长连接，避免大量 time_wait\n            proxy_http_version 1.1;\n            proxy_set_header Connection "";\n\n            \n            # $host：nginx的ip\n            # $http_host：nginx的ip和端口号\n            # $proxy_host：反向代理到的ip地址\n            # $proxy_port：反向代理到的端口号\n            proxy_set_header Host $http_host:$proxy_port;\n\n            # 获取用户的真实ip，下面是两种方式\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            \n\t\t\t# 错误拦截\n            # proxy_intercept_errors on;\n\n            # 反向代理\n            proxy_pass http://tomcat_servers;\n            \n        }\n    }\n}\n')])])]),t._v(" "),e("h3",{attrs:{id:"负载均衡策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡策略"}},[t._v("#")]),t._v(" 负载均衡策略")]),t._v(" "),e("ul",[e("li",[t._v("1、轮询：将请求按顺序轮流地分配到后端服务器上，它均衡地对待后端的每一台服务器，而不关心服务器实际的连接数和当前的系统负载。")]),t._v(" "),e("li",[t._v("2、加权轮询：不同的后端服务器可能机器的配置和当前系统的负载并不相同，因此它们的抗压能力也不相同。")])]),t._v(" "),e("p",[t._v("  给配置高、负载低的机器配置更高的权重，让其处理更多的请求；而配置低、负载高的机器，给其分配较低的权重，降低其系统负载")]),t._v(" "),e("p",[t._v("  加权轮询能很好地处理这一问题，并将请求顺序且按照权重分配到后端。")]),t._v(" "),e("ul",[e("li",[t._v("3、ip_hash（源地址哈希法）：根据获取客户端的IP地址，通过哈希函数计算得到一个数值，用该数值对服务器列表的大小进行取模运算，得到的结果便是客户端要访问服务器的序号。")])]),t._v(" "),e("p",[t._v("  采用源地址哈希法进行负载均衡，同一IP地址的客户端，当后端服务器列表不变时，它每次都会映射到同一台后端服务器进行访问。")]),t._v(" "),e("ul",[e("li",[t._v("4、随机：通过系统的随机算法，根据后端服务器的列表大小值来随机选取其中的一台服务器进行访问。")]),t._v(" "),e("li",[t._v("5、least_conn（最小连接数法）：由于后端服务器的配置不尽相同，对于请求的处理有快有慢，最小连接数法根据后端服务器当前的连接情况，动态地选取其中当前积压连接数最少的一台服务器来处理当前的请求，尽可能地提高后端服务的利用效率，将负责合理地分流到每一台服务器。")])]),t._v(" "),e("h3",{attrs:{id:"反向代理故障转移"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反向代理故障转移"}},[t._v("#")]),t._v(" 反向代理故障转移")]),t._v(" "),e("p",[t._v("  Nginx将请求分配给其中一个实例失败时，比如该实例宕机了。Nginx会自动将请求转发给下一个实例，这叫做"),e("strong",[t._v("故障转移")]),t._v("。但"),e("strong",[t._v("故障转移，同时也会发生在请求超时的场景下")]),t._v("。")]),t._v(" "),e("p",[t._v("  Nginx中默认的请求超时时间为60秒。默认值太大了，通常会通过"),e("code",[t._v("proxy_read_timeout 3s;")]),t._v("参数进行调整。")]),t._v(" "),e("p",[t._v("  此时我们的实例A处理请求速度很慢，Nginx由于执行超时会将请求转发给下一个节点。如果所有的节点都超时，则返回超时响应给客户端。")]),t._v(" "),e("p",[t._v("  虽然响应给客户端请求超时，但"),e("strong",[t._v("其实请求仍然在后端服务器上执行着")]),t._v("。这就可能"),e("strong",[t._v("导致服务器重复处理请求，因此需要保证幂等性。dubbo、springclooud等微服务架构内部调用的重试机制也会有这个问题")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("  请求重试的问题")]),t._v("。")]),t._v(" "),e("p",[t._v("  对于get请求。由于大多数get请求都是做数据查询，因此不会有业务数据的问题。在开发规范中，也就要"),e("strong",[t._v("要求get请求不能有写数据库的操作")]),t._v("。")]),t._v(" "),e("p",[t._v("  对于post请求。当服务器宕机时，请求根本没有发出去，因为会进行故障转移进行重试。当出现超时时，"),e("strong",[t._v("Nginx并不会转发post请求")]),t._v("到另外的服务器，避免了重复处理数据的问题。")]),t._v(" "),e("h2",{attrs:{id:"解决跨域问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决跨域问题"}},[t._v("#")]),t._v(" 解决跨域问题")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("server {\n    listen 80;\n    server_name localhost;\n    add_header 'Access-Control-Allow-Origin' *;\n    add_header 'Access-Control-Allow-Credentials' 'true';\n    add_header 'Access-Control-Allow-Methods' *;\n    add_header 'Access-Control-Allow-Headers' *;\n\n    # 配置静态资源防盗链\n    valid_referers *.imooc.com;\n    if ($invalid_referer) {\n        return 404;\n    }\n}\n")])])]),e("h2",{attrs:{id:"使用gzip压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用gzip压缩"}},[t._v("#")]),t._v(" 使用Gzip压缩")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 开启Gzip压缩功能，提高传输效率，节约带宽\ngzip on;\n# 限制最小压缩，小于1字节文件不会压缩\ngzip_min_length 1;\n# 压缩比，1~9之间，压缩比越大，CPU使用的也就越多\ngzip_comp_level 3;\n# 定义压缩文件的类型\ngzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/json;\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);