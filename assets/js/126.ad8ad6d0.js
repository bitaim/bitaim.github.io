(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{325:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"有序性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有序性"}},[t._v("#")]),t._v(" 有序性")]),t._v(" "),a("p",[t._v("  指令重排序，主要发生在编译器（JIT）和处理器中。")]),t._v(" "),a("p",[t._v("  为了提高程序的执行效率，编译器和处理器会对机器指令码进行重排序（不按套路出牌，不讲武德）。但无论怎么重排序，都要保证单线程程序的执行结果不能改变。编译器和处理器必须遵守"),a("strong",[t._v("as-if-serial")]),t._v("语义。")]),t._v(" "),a("p",[t._v("  指令重排序可能会改变程序中语句的先后顺序，重排序不会影响单线程的执行，却会影响到多线程并发执行的正确性。")]),t._v(" "),a("h2",{attrs:{id:"happens-before原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#happens-before原则"}},[t._v("#")]),t._v(" Happens-Before原则")]),t._v(" "),a("p",[t._v("  Happens-Before原则是判断线程是否安全的主要依据。依赖这个原则，就可以"),a("strong",[t._v("判断在并发情况下是否存在可见性和有序性的问题")]),t._v("。再判断是否是原子性的，则可以判断是否是线程安全的。")]),t._v(" "),a("p",[t._v("  该原则要表达的含义为"),a("strong",[t._v("前面一个操作的结果对后续操作是可见的，不论是否发生在同一个线程里")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("1、八大原则")])]),t._v(" "),a("p",[t._v("  规则一："),a("strong",[t._v("程序的顺序性规则")]),t._v("。指在一个线程内，按照程序顺序，前面的操作 "),a("code",[t._v("Happens-Before")]),t._v(" 于后续的任意操作。")]),t._v(" "),a("p",[t._v("  规则二："),a("strong",[t._v("volatile变量规则")]),t._v("。指对一个volatile变量的写操作 "),a("code",[t._v("Happens-Before")]),t._v(" 于后续对这个volatile变量的读操作。")]),t._v(" "),a("p",[t._v("  规则三："),a("strong",[t._v("传递性规则")]),t._v("。指如果 A操作 "),a("code",[t._v("Happens-Before")]),t._v(" B操作，且 B操作 "),a("code",[t._v("Happens-Before")]),t._v(" C操作，那么 A操作 "),a("code",[t._v("Happens-Before")]),t._v(" C操作。")]),t._v(" "),a("p",[t._v("  规则四："),a("strong",[t._v("管程中的锁规则")]),t._v("。指管程中的解锁操作 "),a("code",[t._v("Happens-Before")]),t._v(" 于后续的加锁操作。")]),t._v(" "),a("p",[t._v("  规则五："),a("strong",[t._v("线程启动规则")]),t._v("。子线程可以看到主线程启动子线程之前的所有操作。")]),t._v(" "),a("p",[t._v("  规则六："),a("strong",[t._v("线程终止规则")]),t._v("。主线程等待子线程完成（join），主线程可以看到子线程的所有操作。")]),t._v(" "),a("p",[t._v("  规则七："),a("strong",[t._v("线程中断规则")]),t._v("。对线程调用"),a("code",[t._v("interrupt()")]),t._v("方法 "),a("code",[t._v("Happends-Before")]),t._v(" 线程检测到中断的操作。")]),t._v(" "),a("p",[t._v("  规则八："),a("strong",[t._v("对象规则")]),t._v("。一个对象的初始化完成 "),a("code",[t._v("Happens-Before")]),t._v(" 一个对象的"),a("code",[t._v("finalize")]),t._v("方法。")]),t._v(" "),a("p",[a("strong",[t._v("2、八大原则案例一")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadLocalTest")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InterruptedException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（1）")]),t._v("\n            flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（2）")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" thread2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// （3）")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// （4）")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        thread1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        thread1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        thread2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("  （1）根据顺序性规则。操作（1）先于操作（2），操作（3）先于操作（4）。")]),t._v(" "),a("p",[t._v("  （2）根据volatile规则。操作（2）先于操作（3），")]),t._v(" "),a("p",[t._v("  （3）如果写确实早于读执行，那么操作（1）先于操作（4），即使"),a("code",[t._v("number")]),t._v("变量没有使用"),a("code",[t._v("volatile")]),t._v("修饰，线程2也一定会打印出数字100。")]),t._v(" "),a("p",[a("strong",[t._v("3、八大原则案例二")])]),t._v(" "),a("p",[t._v("  为什么"),a("code",[t._v("synchronized")]),t._v("关键字能保证可见性。")]),t._v(" "),a("p",[t._v("  （1）根据管程中锁的规则。线程的解锁操作 先于 其他线程的加锁操作。")]),t._v(" "),a("p",[t._v("  （2）根据顺序性规则。临界区内对共享变量的修改 先于 线程的解锁操作。")]),t._v(" "),a("p",[t._v("  （3）根据传递性规则，对共享变量的修改 先于 其他线程的加锁操作（其他线程的加锁操作 先于 其他线程对共享变量的读取）。")])])}),[],!1,null,null,null);s.default=e.exports}}]);