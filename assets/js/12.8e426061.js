(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{212:function(t,s,a){"use strict";a.r(s);var e=a(0),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),a("h3",{attrs:{id:"windows创建ssh-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#windows创建ssh-key"}},[t._v("#")]),t._v(" Windows创建SSH Key")]),t._v(" "),a("p",[a("strong",[t._v("1、首先安装Git（略）")])]),t._v(" "),a("p",[t._v("https://git-scm.com/download/win，下载后傻瓜式安装即可。")]),t._v(" "),a("p",[a("strong",[t._v("2、配置方式如下")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("1、右键电脑空白处，点击 "),a("code",[t._v("Git Bash Here")])]),t._v(" "),a("li",[t._v("2、设置全局变量用户名称 "),a("code",[t._v('git config --global user.name "weihao"')])]),t._v(" "),a("li",[t._v("3、设置全局变量用户邮箱 "),a("code",[t._v('git config --global user.email "weihao_950611@163.com"')])]),t._v(" "),a("li",[t._v("4、生成SSH Key "),a("code",[t._v('ssh-keygen -t rsa -C "weihao_950611@163.com"')])]),t._v(" "),a("li",[t._v("5、进入C:\\Users\\firstlaptop.ssh，打开id_rsa.pub")]),t._v(" "),a("li",[t._v("6、复制内容到gitlab中，右上角头像，选settings，左侧SSH Keys，粘贴进入，title自动填充你的邮箱，然后点击Add Key")])]),t._v(" "),a("h3",{attrs:{id:"github玩法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github玩法"}},[t._v("#")]),t._v(" Github玩法")]),t._v(" "),a("ul",[a("li",[t._v("1、进入Github官网，右键右上角头像创建仓库即可")]),t._v(" "),a("li",[t._v("2、复制SSH Key到Github Settings")]),t._v(" "),a("li",[t._v("3、在本地创建一个和仓库名相同的文件夹")]),t._v(" "),a("li",[t._v("4、右键空白，点击"),a("code",[t._v("Git Bash Here")])])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化本地仓库")]),t._v("\ngit init \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以SSH的方式拉取代码，Https的方式每次都要输入账号和密码")]),t._v("\ngit pull git"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@github")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("bitaim"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("photo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关联仓库")]),t._v("\ngit remote add origin git"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@github")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("bitaim"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("photo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一次提交代码")]),t._v("\ngit push "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u origin master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 之后提交代码")]),t._v("\ngit push\n")])])]),a("h3",{attrs:{id:"提交代码的步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提交代码的步骤"}},[t._v("#")]),t._v(" 提交代码的步骤")]),t._v(" "),a("ul",[a("li",[t._v("1、"),a("code",[t._v("git status")]),t._v("检查本地代码的状态")]),t._v(" "),a("li",[t._v("2、"),a("code",[t._v("git add .")]),t._v(" 将本地代码提交到暂存区")]),t._v(" "),a("li",[t._v("3、"),a("code",[t._v("git status")]),t._v("再次检查本地代码的状态")]),t._v(" "),a("li",[t._v("4、"),a("code",[t._v('git commit -m "备注"')]),t._v("将暂存区的代码提交到本地仓库")]),t._v(" "),a("li",[t._v("5、"),a("code",[t._v("git pull")]),t._v("在远程仓库拉取代码")]),t._v(" "),a("li",[t._v("6、"),a("code",[t._v("git push origin master")]),t._v("如果没有冲突直接提交代码到远程仓库，有冲突的话，解决冲突，然后提交到本地仓库，再次pull，再次push")])]),t._v(" "),a("p",[a("code",[t._v("git reset HEAD")]),t._v(" 将提交到暂存区的代码回退")])])}),[],!1,null,null,null);s.default=v.exports}}]);