(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{250:function(v,_,a){"use strict";a.r(_);var e=a(0),t=Object(e.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"linux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[v._v("#")]),v._v(" Linux")]),v._v(" "),a("h3",{attrs:{id:"启动java服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动java服务"}},[v._v("#")]),v._v(" 启动Java服务")]),v._v(" "),a("p",[v._v("  指令："),a("code",[v._v("nohup java -jar -Dfile.encoding=UTF-8 hermes.jar 1>/dev/null 2>&1 &")]),v._v("，启动Java服务。")]),v._v(" "),a("p",[v._v("  （1）"),a("code",[v._v("-D")]),v._v("指定系统参数，在程序中可以通过"),a("code",[v._v('System.getProperty("file.encoding")')]),v._v("获取值。")]),v._v(" "),a("p",[v._v("  （2）"),a("code",[v._v("1>/dev/null 2>&1")]),v._v("，不生成日志。")]),v._v(" "),a("p",[v._v("  （3）"),a("code",[v._v("nohup ... &")]),v._v("，后台启动。")]),v._v(" "),a("p",[v._v("  指令："),a("code",[v._v("kill -15 <pid>")]),v._v("，关闭Java服务，Java服务会回调钩子函数正常完成退出逻辑。"),a("code",[v._v("kill -9 <pid>")]),v._v("是强制杀死一个进程，会导致数据丢失的问题。")]),v._v(" "),a("h3",{attrs:{id:"编辑命令-vi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编辑命令-vi"}},[v._v("#")]),v._v(" 编辑命令 vi")]),v._v(" "),a("p",[v._v("  （1）指令："),a("code",[v._v(":/ <keyword>")]),v._v("，查询内容，"),a("code",[v._v("n")]),v._v("搜索下一个，"),a("code",[v._v("N（shift + n）")]),v._v("搜索上一个。")]),v._v(" "),a("p",[v._v("  （2）指令："),a("code",[v._v("gg")]),v._v("，定位到第一行。")]),v._v(" "),a("p",[v._v("  （3）指令："),a("code",[v._v("G")]),v._v("，定位到最后一行。")]),v._v(" "),a("p",[v._v("  （4）指令："),a("code",[v._v(": 666")]),v._v("，跳转到第666行。")]),v._v(" "),a("p",[v._v("  （5）指令："),a("code",[v._v(":set nu")]),v._v("，显示行号。")]),v._v(" "),a("p",[v._v("  （6）指令："),a("code",[v._v(":set nonu")]),v._v("，关闭行号。")]),v._v(" "),a("h3",{attrs:{id:"开放端口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开放端口"}},[v._v("#")]),v._v(" 开放端口")]),v._v(" "),a("p",[v._v("  （1）指令："),a("code",[v._v("sudo firewall-cmd --list-ports")]),v._v("，查看已开放端口。")]),v._v(" "),a("p",[v._v("  （2）指令："),a("code",[v._v("sudo firewall-cmd --zone=public --add-port=80/tcp --permanent")]),v._v("，开放80端口。")]),v._v(" "),a("p",[v._v("  （3）指令："),a("code",[v._v("sudo firewall-cmd --reload")]),v._v("，重启防火墙，使配置生效。")]),v._v(" "),a("h3",{attrs:{id:"磁盘占用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#磁盘占用"}},[v._v("#")]),v._v(" 磁盘占用")]),v._v(" "),a("p",[v._v("  磁盘占用大多数情况是日志文件太多了，删除一些日志文件即可。在生产环境中，注意tomcat和nginx输出日志按天切割，通过shell脚本定期删除7天前旧的日志文件。")]),v._v(" "),a("p",[v._v("  （1）指令："),a("code",[v._v("df -h")]),v._v("，查看磁盘使用情况。")]),v._v(" "),a("p",[v._v("  （2）指令："),a("code",[v._v("find / -size +100M |xargs ls -lh")]),v._v("，寻找根目录下大于100MB的文件。如果存在大量小文件，那么还是解决不了问题。")]),v._v(" "),a("p",[v._v("  （3）指令："),a("code",[v._v("du -sh *")]),v._v("，显示当前目录下各个文件夹的磁盘空间所占大小。")]),v._v(" "),a("p",[v._v("  （4）指令："),a("code",[v._v("du -h >fs_du.log")]),v._v("，查看各个目录占用的磁盘空间大小，定位哪个目录是不是有大量小文件。")]),v._v(" "),a("h3",{attrs:{id:"定位-cpu100"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定位-cpu100"}},[v._v("#")]),v._v(" 定位 CPU100%")]),v._v(" "),a("p",[v._v("  （1）指令："),a("code",[v._v("top -c")]),v._v("，定位耗费CPU进程，显示进程列表，按"),a("code",[v._v("P")]),v._v("可按照CPU使用率排序。")]),v._v(" "),a("p",[v._v("  （2）指令："),a("code",[v._v("top -Hp <进程ID>")]),v._v("，定位耗费CPU线程，按"),a("code",[v._v("P")]),v._v("可按照CPU使用率排序。")]),v._v(" "),a("p",[v._v("  （3）指令："),a("code",[v._v('printf "%x\\n" <线程ID>')]),v._v("，定位耗费CPU代码，将线程ID以16进制输出。")]),v._v(" "),a("p",[v._v("  （4）指令："),a("code",[v._v("jstack <进程ID> | grep <16进制的线程ID> -C5 --color")]),v._v("，用jstack打印堆栈信息，根据堆栈信息就可以定位到哪个进程的哪个线程的哪段代码导致的CPU负载过高。")]),v._v(" "),a("p",[v._v("  （5）指令："),a("code",[v._v("top")]),v._v("的参数"),a("code",[v._v("load average")]),v._v("。显示的是1分钟 5分钟 15分钟的CPU加载的数量，与CPU的核数相当，如果是2核的服务器，参数不要超过2就好，如果是2以上，代表CPU处于阻塞状态，该参数值越低越好。")]),v._v(" "),a("h3",{attrs:{id:"杀掉僵尸进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#杀掉僵尸进程"}},[v._v("#")]),v._v(" 杀掉僵尸进程")]),v._v(" "),a("p",[v._v("  通过"),a("code",[v._v("kill")]),v._v("指令无法杀掉一个进程时，代表这个进程成为了僵尸进程。因为这个进程释放了资源，但却没有得到父进程的确认。")]),v._v(" "),a("p",[v._v("  （1）指令："),a("code",[v._v("ps aux")]),v._v("，查看STAT，如果显示是Z，代表是僵尸进程。")]),v._v(" "),a("p",[v._v("  （2）指令："),a("code",[v._v("ps -ef | grep <僵尸进程id>")]),v._v("，找到父进程ID，先杀掉父进程，在杀掉子进程即可。")]),v._v(" "),a("p",[v._v("  （3）指令："),a("code",[v._v("pstree -p <进程号>")]),v._v("，可以看到该进程的线程。")]),v._v(" "),a("p",[v._v("  （4）指令："),a("code",[v._v("pstree -p <进程号> | wc -l")]),v._v("，可以看到该进程的线程的数量。")]),v._v(" "),a("h3",{attrs:{id:"定时任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定时任务"}},[v._v("#")]),v._v(" 定时任务")]),v._v(" "),a("p",[v._v("  （1）指令："),a("code",[v._v("systemctl status crond")]),v._v("，查看定时任务是否开启。")]),v._v(" "),a("p",[v._v("  （2）指令："),a("code",[v._v("systemctl start crond")]),v._v("，启动定时任务。")]),v._v(" "),a("p",[v._v("  （3）指令："),a("code",[v._v("crontab -l")]),v._v("，查看定时任务列表。")]),v._v(" "),a("p",[v._v("  （4）指令："),a("code",[v._v("crontab -e")]),v._v("，编辑定时任务列表（直接生效）。")]),v._v(" "),a("h3",{attrs:{id:"复制命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制命令"}},[v._v("#")]),v._v(" 复制命令")]),v._v(" "),a("p",[v._v("  （1）指令："),a("code",[v._v("cp dir1/a.doc dir2")]),v._v("。")]),v._v(" "),a("p",[v._v("  （2）指令："),a("code",[v._v("cp -r dir1 dir2")]),v._v("。")]),v._v(" "),a("p",[v._v("  （3）指令："),a("code",[v._v("cp -r dir1/. dir2")]),v._v("。")]),v._v(" "),a("p",[v._v("  参数"),a("code",[v._v("-i")]),v._v("，询问如果已存在同名文件，是否进行覆盖。")]),v._v(" "),a("h3",{attrs:{id:"查看端口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看端口"}},[v._v("#")]),v._v(" 查看端口")]),v._v(" "),a("p",[v._v("  （1）指令："),a("code",[v._v("netstat -anp | grep 5990")]),v._v("，查看5990端口的占用（使用）情况。")]),v._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("tcp6     0      0 :::5990                 :::*                    LISTEN       8345/java\ntcp6     0      0 172.16.15.233:5990      192.168.4.126:46052     ESTABLISHED  8345/java\ntcp6     0      0 172.16.15.233:5990      192.168.4.126:44228     ESTABLISHED  8345/java\ntcp6     0      0 172.16.15.233:5990      192.168.4.17:35078      ESTABLISHED  8345/java\ntcp6     0      0 172.16.15.233:5990      192.168.4.126:53195     ESTABLISHED  8345/java\ntcp6     0      0 172.16.15.233:5990      192.168.4.126:46043     ESTABLISHED  8345/java\ntcp6     0      0 172.16.15.233:5990      192.168.4.17:45708      ESTABLISHED  8345/java\n")])])]),a("p",[v._v("  可以看到"),a("code",[v._v("172.16.15.233")]),v._v("服务器上的某个服务使用了5990端口，并和右侧的一列服务器建立了连接。")]),v._v(" "),a("p",[v._v("  （2）指令："),a("code",[v._v("netstat -anp | grep 5990 | wc -l")]),v._v("，查看5990端口对外建立连接的数量。")]),v._v(" "),a("h3",{attrs:{id:"路由表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由表"}},[v._v("#")]),v._v(" 路由表")]),v._v(" "),a("p",[v._v("  指令："),a("code",[v._v("route -n")]),v._v("，查看路由表。如果显示"),a("code",[v._v("route：未找到命令")]),v._v("，可以通过指令："),a("code",[v._v("yum install net-tools")]),v._v("安装插件。")]),v._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("Kernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n0.0.0.0         192.168.29.2    0.0.0.0         UG    100    0        0 ens33\n192.168.29.0    0.0.0.0         255.255.255.0   U     100    0        0 ens33\n")])])]),a("h3",{attrs:{id:"目录介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录介绍"}},[v._v("#")]),v._v(" 目录介绍")]),v._v(" "),a("p",[v._v("  目录："),a("code",[v._v("/etc/")]),v._v("，是用来存储配置。")]),v._v(" "),a("p",[v._v("  目录："),a("code",[v._v("/var/")]),v._v("，是用来存储软件运行时产生的一些数据。")]),v._v(" "),a("h3",{attrs:{id:"系统调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统调用"}},[v._v("#")]),v._v(" 系统调用")]),v._v(" "),a("p",[v._v("  指令："),a("code",[v._v("yum install man-pages -y")])]),v._v(" "),a("p",[v._v("  指令："),a("code",[v._v("man syscalls")])]),v._v(" "),a("h3",{attrs:{id:"文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件"}},[v._v("#")]),v._v(" 文件")]),v._v(" "),a("p",[v._v("  查看磁盘剩余空间："),a("code",[v._v("df -h")])]),v._v(" "),a("p",[v._v("  查找家目录下大于100MB的大文件："),a("code",[v._v("find ~ -size +100M")])]),v._v(" "),a("p",[v._v("  清空大文件内容："),a("code",[v._v('echo "" > zookeeper.out')])]),v._v(" "),a("h3",{attrs:{id:"端口号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#端口号"}},[v._v("#")]),v._v(" 端口号")]),v._v(" "),a("p",[v._v("  查看端口号是否被占用："),a("code",[v._v("ps -ef | grep 8080")])])])}),[],!1,null,null,null);_.default=t.exports}}]);