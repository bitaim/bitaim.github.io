(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{263:function(t,a,s){"use strict";s.r(a);var r=s(0),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"订单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#订单"}},[t._v("#")]),t._v(" 订单")]),t._v(" "),s("h2",{attrs:{id:"防止订单重复提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防止订单重复提交"}},[t._v("#")]),t._v(" 防止订单重复提交")]),t._v(" "),s("p",[t._v("  通常订单提交是与扣减库存挂钩的，如果订单重复提交就会造成库存重复扣减，会给商家造成损失。")]),t._v(" "),s("p",[s("strong",[t._v("1、订单重复提交的情况")])]),t._v(" "),s("p",[t._v("  （1）用户善意行为。APP上用户点击提交订单按钮后，由于后端没有返回，用户以为没有操作成功会再次点击提交订单按钮。")]),t._v(" "),s("p",[t._v("  （2）用户恶意行为。黑客直接刷提单接口，绕过APP端防重提交功能。")]),t._v(" "),s("p",[t._v("  （3）提单系统重试，比如提单系统为了提高系统的可用性，在第一次调用库存系统扣减接口时会重试再次提交扣减请求。需要库存系统来保证接口的幂等性，每次调用库存系统时携带订单号，库存系统基于订单号增加一个分布式事务锁。")]),t._v(" "),s("p",[s("strong",[t._v("2、解决方案")])]),t._v(" "),s("p",[t._v("  提交表单前，向后端申请一个令牌，提交订单时携带该令牌，后端对令牌进行校验。")]),t._v(" "),s("h2",{attrs:{id:"防止订单重复支付"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防止订单重复支付"}},[t._v("#")]),t._v(" 防止订单重复支付")])])}),[],!1,null,null,null);a.default=e.exports}}]);