(window.webpackJsonp=window.webpackJsonp||[]).push([[132],{331:function(t,n,r){"use strict";r.r(n);var v=r(0),_=Object(v.a)({},(function(){var t=this,n=t.$createElement,r=t._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"知识点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#知识点"}},[t._v("#")]),t._v(" 知识点")]),t._v(" "),r("p",[r("strong",[t._v("1、为什么要有CPU时间片")]),t._v("？")]),t._v(" "),r("p",[t._v("  时间片是每个CPU核心分配给线程执行的时间，由于时间片的时间极短，使程序在表面上看来是同时进行的。")]),t._v(" "),r("p",[r("strong",[t._v("2、什么是系统调用")]),t._v("？")]),t._v(" "),r("p",[t._v("  Linux系统提供了一组接口，用户可以使用这些接口对文件和设备进行访问和控制。这些接口函数被称为系统调用（system call）。")]),t._v(" "),r("p",[t._v("  系统调用发生在内核态，因此会发生用户态到内核态的切换，会有一定的性能消耗。")]),t._v(" "),r("p",[t._v("  用户态想要切换到内核态，就需要产生一个 "),r("strong",[t._v("0x80 中断")]),t._v("，用户态进程调用任何一个系统调用，都需要触发该中断。")]),t._v(" "),r("p",[t._v("  用户态和内核态的指的是程序在运行过程中处于的状态。当程序需要申请外部资源的时候，就会触发用户态向内核态的切换。\n申请外部资源有三种情况，一是系统调用，二是中断，三是异常。当内核态的相关操作执行完毕之后，就会退回到用户态。")]),t._v(" "),r("p",[t._v("  系统调用比如有读写文件，open、read、write系统调用命令。申请内存，有brk、mmap系统调用，在申请内存小于128KB时使用brk。\n这两个申请内存的系统调用其实申请的是虚拟内存空间，并没有真正的申请到主存上的物理内存空间。想要拿到真正的物理内存空间，\n还要在第一次访问虚拟内存空间时，会发现虚拟内存空间还没有映射到物理内存空间，产生一个缺页中断（缺页异常）。")])])}),[],!1,null,null,null);n.default=_.exports}}]);